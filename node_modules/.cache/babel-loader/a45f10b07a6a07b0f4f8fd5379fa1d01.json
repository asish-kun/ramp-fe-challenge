{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions,\n    onApproval\n  } = _ref;\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n  const [transactionsData, setTransactionsData] = useState(transactions);\n  useEffect(() => {\n    setTransactionsData(transactions);\n  }, [transactions]);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    setLoadingTransactions(prev => ({ ...prev,\n      [transactionId]: true\n    }));\n    await onApproval(transactionId, newValue);\n    setTransactionsData(prevTransactions => prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n      approved: newValue\n    } : transaction));\n    setLoadingTransactions(prev => ({ ...prev,\n      [transactionId]: false\n    }));\n  }, [onApproval]);\n\n  if (transactions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactionsData.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loadingTransactions[transaction.id] || false,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"1QuwvIiBHlUoDHBYERin/JiAdhM=\");\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useEffect","TransactionPane","Transactions","transactions","onApproval","loadingTransactions","setLoadingTransactions","transactionsData","setTransactionsData","setTransactionApproval","transactionId","newValue","prev","prevTransactions","map","transaction","id","approved","length"],"sources":["/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\"\nimport { SetTransactionApprovalParams, Transaction } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions, onApproval }) => {\n  const [loadingTransactions, setLoadingTransactions] = useState<Record<string, boolean>>({})\n  const [transactionsData, setTransactionsData] = useState<Transaction[]>(transactions)\n\n  useEffect(() => {\n    setTransactionsData(transactions)\n  }, [transactions])\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      setLoadingTransactions((prev) => ({ ...prev, [transactionId]: true }))\n      await onApproval(transactionId, newValue)\n      setTransactionsData((prevTransactions) =>\n        prevTransactions.map((transaction) =>\n          transaction.id === transactionId ? { ...transaction, approved: newValue } : transaction\n        )\n      )\n      setLoadingTransactions((prev) => ({ ...prev, [transactionId]: false }))\n    },\n    [onApproval]\n  )\n\n  if (transactions.length === 0) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactionsData.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loadingTransactions[transaction.id] || false}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAkC;EAAA;;EAAA,IAAjC;IAAEC,YAAF;IAAgBC;EAAhB,CAAiC;EACnF,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAA0B,EAA1B,CAA9D;EACA,MAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAgBI,YAAhB,CAAxD;EAEAH,SAAS,CAAC,MAAM;IACdQ,mBAAmB,CAACL,YAAD,CAAnB;EACD,CAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;EAIA,MAAMM,sBAAsB,GAAGX,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEY,aAAF;MAAiBC;IAAjB,CAAgC;IACrCL,sBAAsB,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAW,CAACF,aAAD,GAAiB;IAA5B,CAAX,CAAD,CAAtB;IACA,MAAMN,UAAU,CAACM,aAAD,EAAgBC,QAAhB,CAAhB;IACAH,mBAAmB,CAAEK,gBAAD,IAClBA,gBAAgB,CAACC,GAAjB,CAAsBC,WAAD,IACnBA,WAAW,CAACC,EAAZ,KAAmBN,aAAnB,GAAmC,EAAE,GAAGK,WAAL;MAAkBE,QAAQ,EAAEN;IAA5B,CAAnC,GAA4EI,WAD9E,CADiB,CAAnB;IAKAT,sBAAsB,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;MAAW,CAACF,aAAD,GAAiB;IAA5B,CAAX,CAAD,CAAtB;EACD,CAVuC,EAWxC,CAACN,UAAD,CAXwC,CAA1C;;EAcA,IAAID,YAAY,CAACe,MAAb,KAAwB,CAA5B,EAA+B;IAC7B,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGX,gBAAgB,CAACO,GAAjB,CAAsBC,WAAD,iBACpB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEV,mBAAmB,CAACU,WAAW,CAACC,EAAb,CAAnB,IAAuC,KAHlD;MAIE,sBAAsB,EAAEP;IAJ1B,GACOM,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAtCM;;GAAMd,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}