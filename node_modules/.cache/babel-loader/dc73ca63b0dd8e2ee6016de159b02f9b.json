{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions: initialTransactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [transactions, setTransactions] = useState(initialTransactions);\n  const [loadingTransactions, setLoadingTransactions] = useState({});\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    setLoadingTransactions(prev => ({ ...prev,\n      [transactionId]: true\n    }));\n\n    try {\n      await fetchWithoutCache(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue\n      }); // Update the local state after successful server update\n\n      setTransactions(prevTransactions => {\n        var _prevTransactions$map;\n\n        return (_prevTransactions$map = prevTransactions === null || prevTransactions === void 0 ? void 0 : prevTransactions.map(transaction => transaction.id === transactionId ? { ...transaction,\n          approved: newValue\n        } : transaction)) !== null && _prevTransactions$map !== void 0 ? _prevTransactions$map : [];\n      });\n    } finally {\n      setLoadingTransactions(prev => ({ ...prev,\n        [transactionId]: false\n      }));\n    }\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"VlXMcp+f16B4jiqZkt286UQijHY=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useState","useCustomFetch","TransactionPane","Transactions","transactions","initialTransactions","fetchWithoutCache","loading","setTransactions","loadingTransactions","setLoadingTransactions","setTransactionApproval","transactionId","newValue","prev","value","prevTransactions","map","transaction","id","approved"],"sources":["/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions: initialTransactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [transactions, setTransactions] = useState(initialTransactions)\n  const [loadingTransactions, setLoadingTransactions] = useState<Record<string, boolean>>({})\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      setLoadingTransactions(prev => ({ ...prev, [transactionId]: true }))\n      try {\n        await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n          transactionId,\n          value: newValue,\n        })\n        // Update the local state after successful server update\n        setTransactions(prevTransactions =>\n          prevTransactions?.map(transaction =>\n            transaction.id === transactionId\n              ? { ...transaction, approved: newValue }\n              : transaction\n          ) ?? []\n        )\n      } finally {\n        setLoadingTransactions(prev => ({ ...prev, [transactionId]: false }))\n      }\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAAEC,YAAY,EAAEC;EAAhB,CAA0C;EAC5F,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCN,cAAc,EAArD;EACA,MAAM,CAACG,YAAD,EAAeI,eAAf,IAAkCR,QAAQ,CAACK,mBAAD,CAAhD;EACA,MAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAA0B,EAA1B,CAA9D;EAEA,MAAMW,sBAAsB,GAAGZ,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEa,aAAF;MAAiBC;IAAjB,CAAgC;IACrCH,sBAAsB,CAACI,IAAI,KAAK,EAAE,GAAGA,IAAL;MAAW,CAACF,aAAD,GAAiB;IAA5B,CAAL,CAAL,CAAtB;;IACA,IAAI;MACF,MAAMN,iBAAiB,CAAqC,wBAArC,EAA+D;QACpFM,aADoF;QAEpFG,KAAK,EAAEF;MAF6E,CAA/D,CAAvB,CADE,CAKF;;MACAL,eAAe,CAACQ,gBAAgB;QAAA;;QAAA,gCAC9BA,gBAD8B,aAC9BA,gBAD8B,uBAC9BA,gBAAgB,CAAEC,GAAlB,CAAsBC,WAAW,IAC/BA,WAAW,CAACC,EAAZ,KAAmBP,aAAnB,GACI,EAAE,GAAGM,WAAL;UAAkBE,QAAQ,EAAEP;QAA5B,CADJ,GAEIK,WAHN,CAD8B,yEAKzB,EALyB;MAAA,CAAjB,CAAf;IAOD,CAbD,SAaU;MACRR,sBAAsB,CAACI,IAAI,KAAK,EAAE,GAAGA,IAAL;QAAW,CAACF,aAAD,GAAiB;MAA5B,CAAL,CAAL,CAAtB;IACD;EACF,CAnBuC,EAoBxC,CAACN,iBAAD,CApBwC,CAA1C;;EAuBA,IAAIF,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACa,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEX,OAHX;MAIE,sBAAsB,EAAEI;IAJ1B,GACOO,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA5CM;;GAAMhB,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}