{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = _ref => {\n  _s();\n\n  let {\n    transaction,\n    loading,\n    setTransactionApproval\n  } = _ref;\n  const [approved, setApproved] = useState(transaction.approved);\n  useEffect(() => {\n    setApproved(transaction.approved);\n  }, [transaction.approved]);\n  const handleCheckboxChange = useCallback(async newValue => {\n    await setTransactionApproval({\n      transactionId: transaction.id,\n      newValue\n    });\n    setApproved(newValue);\n  }, [setTransactionApproval, transaction.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionPane, \"/C/SY7WDHni00LKZIazbWsO8UJE=\");\n\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useCallback","useState","useEffect","InputCheckbox","TransactionPane","transaction","loading","setTransactionApproval","approved","setApproved","handleCheckboxChange","newValue","transactionId","id","merchant","moneyFormatter","format","amount","employee","firstName","lastName","date","Intl","NumberFormat","style","currency"],"sources":["/Users/mickey/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved)\n\n  useEffect(() => {\n    setApproved(transaction.approved)\n  }, [transaction.approved])\n\n  const handleCheckboxChange = useCallback(\n    async (newValue: boolean) => {\n      await setTransactionApproval({\n        transactionId: transaction.id,\n        newValue,\n      })\n      setApproved(newValue)\n    },\n    [setTransactionApproval, transaction.id]\n  )\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={handleCheckboxChange}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAGA,OAAO,MAAMC,eAAyC,GAAG,QAInD;EAAA;;EAAA,IAJoD;IACxDC,WADwD;IAExDC,OAFwD;IAGxDC;EAHwD,CAIpD;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACI,WAAW,CAACG,QAAb,CAAxC;EAEAN,SAAS,CAAC,MAAM;IACdO,WAAW,CAACJ,WAAW,CAACG,QAAb,CAAX;EACD,CAFQ,EAEN,CAACH,WAAW,CAACG,QAAb,CAFM,CAAT;EAIA,MAAME,oBAAoB,GAAGV,WAAW,CACtC,MAAOW,QAAP,IAA6B;IAC3B,MAAMJ,sBAAsB,CAAC;MAC3BK,aAAa,EAAEP,WAAW,CAACQ,EADA;MAE3BF;IAF2B,CAAD,CAA5B;IAIAF,WAAW,CAACE,QAAD,CAAX;EACD,CAPqC,EAQtC,CAACJ,sBAAD,EAAyBF,WAAW,CAACQ,EAArC,CARsC,CAAxC;EAWA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAG,SAAS,EAAC,UAAb;QAAA,WAAyBR,WAAW,CAACS,QAArC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIC,cAAc,CAACC,MAAf,CAAsBX,WAAW,CAACY,MAAlC;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAG,SAAS,EAAC,8BAAb;QAAA,WACGZ,WAAW,CAACa,QAAZ,CAAqBC,SADxB,OACoCd,WAAW,CAACa,QAAZ,CAAqBE,QADzD,SACsEf,WAAW,CAACgB,IADlF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,aAAD;MACE,EAAE,EAAEhB,WAAW,CAACQ,EADlB;MAEE,OAAO,EAAEL,QAFX;MAGE,QAAQ,EAAEF,OAHZ;MAIE,QAAQ,EAAEI;IAJZ;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvCM;;GAAMN,e;;KAAAA,e;AAyCb,MAAMW,cAAc,GAAG,IAAIO,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;EACpDC,KAAK,EAAE,UAD6C;EAEpDC,QAAQ,EAAE;AAF0C,CAA/B,CAAvB"},"metadata":{},"sourceType":"module"}